version: "3.8"

services:
  api-gateway:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - math-service
      - history-service
      - geography-service
    environment:
      - MATH_SERVICE_URL=${MATH_SERVICE_URL}
      - HISTORY_SERVICE_URL=${HISTORY_SERVICE_URL}
      - GEOGRAPHY_SERVICE_URL=${GEOGRAPHY_SERVICE_URL}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  math-service:
    build: 
      context: ./services/math-service
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      - MONGO_URL=${MATH_DB_MONGO_URL}
    depends_on:
      - math-db
    networks:
      - app-network
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - math-db:/data/db

  math-db:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - math-db:/data/db

  history-service:
    build:  
      context: ./services/history-service
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=${HISTORY_DB_HOST}
      - DB_PORT=${HISTORY_DB_PORT}
    depends_on:
      - history-db
    networks:
      - app-network
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - history-db:/data/db

  history-db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - history-db:/data/db

  geography-service:
    build: 
      context: ./services/geography-service
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    environment:
      - MONGO_URL=${GEOGRAPHY_DB_MONGO_URL}
    depends_on:
      - geography-db
    networks:
      - app-network
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - geography-db:/data/db

  geography-db:
    image: mongo
    ports:
      - "27018:27017"
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - geography-db:/data/db

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  math-db:
  history-db:
  geography-db:

networks:
  app-network:
    driver: bridge
  db-network:
    driver: bridge
